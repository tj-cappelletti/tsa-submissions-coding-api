version: '3.9'

services:
  mongodb:
    hostname: mongodb.tsa.localdev.me
    environment:
      MONGO_INITDB_DATABASE: submissions
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rIMdEnfnHj395cFO
    ports:
      - 27017:27017
    volumes:
      - ../docker/mongodb:/docker-entrypoint-initdb.d

  mongo-express:
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rIMdEnfnHj395cFO
      ME_CONFIG_MONGODB_SERVER: mongodb.tsa.localdev.me
    ports:
      - 8081:8081

  rabbitmq:
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    hostname: redis.tsa.localdev.me
    ports:
    - "6379:6379"

  webapi:
    hostname: api.tsa.localdev.me
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "https://+:44300"
      APSNETCORE_HTTPS_PORT: "44300"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "b05e4983-84e0-447d-97c0-3fdf5b91ddb4"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/apiCertificate.pfx"
      DOCKER_CONTAINER: "Y"
    expose:
      - "44300"
    ports:
      - "44300:44300"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ../docker/certs:/https:ro
      - type: bind
        source: ../docker/certs/publicRootCaCertificate.crt
        target: /usr/local/share/ca-certificates/publicRootCaCertificate.crt
