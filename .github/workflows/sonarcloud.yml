name: SonarCloud

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sonarcloud.yml'
      - 'src/**'

  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '.github/workflows/sonarcloud.yml'
      - 'src/**'
    
  workflow_dispatch:
    
jobs:
  sonarcloudScanner:
    name: Run SonarCloud Scanner
    runs-on: windows-latest

    permissions:
      issues: write
      pull-requests: write

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner/dotnet-sonarscanner begin `
            /k:"tj-cappelletti_tsa-coding-submissions" `
            /o:"tj-cappelletti" `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths=.\src\Tsa.Submissions.Coding.UnitTests\coverage.opencover.xml

          dotnet build `
            ./src/Tsa.Submissions.Coding.sln `
            --configuration Release `
            --no-incremental
            --nologo

          dotnet test ./src/Tsa.Submissions.Coding.UnitTests/Tsa.Submissions.Coding.UnitTests.csproj `
            --configuration Release `
            --no-build `
            --verbosity normal `
            --filter "TestCategory=UnitTest" `
            --nologo `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover

          dotnet-coverage collect 'dotnet test ./src/Tsa.Submissions.Coding.UnitTests/Tsa.Submissions.Coding.UnitTests.csproj' -f xml  -o 'coverage.xml'
          .\.sonar\scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
